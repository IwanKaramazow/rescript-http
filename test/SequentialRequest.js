// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Api from "./Api.js";
import * as Curry from "../node_modules/bs-platform/lib/es6/curry.js";
import * as Belt_Array from "../node_modules/bs-platform/lib/es6/belt_Array.js";
import * as Belt_Option from "../node_modules/bs-platform/lib/es6/belt_Option.js";

function req1(resolve, reject, onCancel, param) {
  console.log("req1 start...");
  var cancel = Api.getBikes(resolve, reject, onCancel, undefined);
  return function (param) {
    Belt_Option.forEach(onCancel, (function (cb) {
            return Curry._1(cb, undefined);
          }));
    return Curry._1(cancel, undefined);
  };
}

function req2(resolve, reject, onCancel, param) {
  console.log("req2 start...");
  var cancel = Api.getBikes(resolve, reject, onCancel, undefined);
  return function (param) {
    Belt_Option.forEach(onCancel, (function (cb) {
            return Curry._1(cb, undefined);
          }));
    return Curry._1(cancel, undefined);
  };
}

function sequential(resolve, reject, onCancel) {
  var toCancel = [];
  var resolve1 = function (data1) {
    var resolve2 = function (data2) {
      console.log("data1", data1);
      console.log("data2", data2);
      return Curry._1(resolve, data1.concat(data2));
    };
    var cancel = req2(resolve2, reject, undefined, undefined);
    toCancel.push(cancel);
    
  };
  var reject$1 = function (param) {
    console.log("code", param[0]);
    console.log("msg", param[1]);
    
  };
  var cancel = req1(resolve1, reject$1, undefined, undefined);
  toCancel.push(cancel);
  return function (param) {
    Belt_Option.forEach(onCancel, (function (cancel) {
            return Curry._1(cancel, undefined);
          }));
    return Belt_Array.forEach(toCancel, (function (cancel) {
                  return Curry._1(cancel, undefined);
                }));
  };
}

export {
  req1 ,
  req2 ,
  sequential ,
  
}
/* No side effect */
